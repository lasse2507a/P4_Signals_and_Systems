# -*- coding: utf-8 -*-
"""
Created on Mon May 12 10:14:09 2020

@author: alexa
"""

import numpy as np
import matplotlib.pyplot as plt

# =============================================================================
# Function
# =============================================================================

#Original Signal
x = np.arange(0, 8000, 50)
y = [3,4,6,9,13,15,17,15,14,10,             #0-450
     7,6,5,12,18,16,15,25,34,24,            #500-950
     15,10,6,6,7,5,4,4,4,5,                 #1000-1450
     6,36,67,123,178,180,182,112,53,50,     #1500-1950
     47,29,12,12,11,7,4,5,6,7,              #2000-2450
     7,5,4,3,2,2,3,3,4,4,                   #2500-2950
     5,20,34,20,5,5,6,6,7,5,                #3000-3450
     4,4,4,5,6,8,11,9,8,6,                  #3500-3950
     5,5,5,5,6,6,7,5,4,4,                   #4000-4450
     4,5,6,7,8,8,9,36,62,95,                #4500-4950
     127,73,28,17,5,4,3,4,6,10,             #5000-5450
     13,19,24,35,47,29,11,9,7,6,            #5500-5950
     6,5,5,4,3,5,6,6,7,5,                   #6000-6450
     3,3,3,4,4,5,6,6,7,5,                   #6500-6950
     2,2,3,24,45,26,8,6,5,4,                #7000-7450
     3,4,5,5,6,6,7,6,4,3]                   #7500-7950

#Final Signal
x2 = np.arange(0, 8000, 50)
y2 = [3,4,6,9,13,15,17,15,14,10,            #0-450
     7,6,5,12,18,16,15,25,34,24,            #500-950
     15,10,6,6,7,5,4,4,4,5,                 #1000-1450
     6,36,67,123,178,180,182,112,53,50,     #1500-1950
     47,29,12,12,11,8,9,36,62,95,           #2000-2450
     127,73,28,17,5,4,3,4,6,10,             #2500-2950
     13,20,34,35,47,29,11,9,7,6,            #3000-3450
     6,5,5,5,6,8,11,9,8,6,                  #3500-3950
     5,5,5,5,6,6,7,5,4,4,                   #4000-4450
     4,5,6,7,8,8,9,36,62,95,                #4500-4950
     127,73,28,17,5,4,3,4,6,10,             #5000-5450
     13,19,24,35,47,29,11,9,7,6,            #5500-5950
     6,5,5,4,3,5,6,6,7,5,                   #6000-6450
     3,3,3,4,4,5,6,6,7,5,                   #6500-6950
     2,2,3,24,45,26,8,6,5,4,                #7000-7450
     3,4,5,5,6,6,7,6,4,3]                   #7500-7950

#Source Octave
x3 = np.arange(1250, 5050, 50)
y3 = [8,11,9,8,6,                   #3750-3950
     5,5,5,5,6,6,7,5,4,4,           #4000-4450
     4,5,6,7,8,8,9,36,62,95,        #4500-4950
     127,73,28,17,5,4,3,4,6,10,     #5000-5450
     13,19,24,35,47,29,11,9,7,6,    #5500-5950
     6,5,5,4,3,5,6,6,7,5,           #6000-6450
     3,3,3,4,4,5,6,6,7,5,           #6500-6950
     2,2,3,24,45,26,8,6,5,4,        #7000-7450
     3]                             #7500

# =============================================================================
# Plotting
# =============================================================================

#Original med target octave
fig = plt.figure()
plt.title('Transposition')
plt.plot(x, y)
for i in [3750,7500]: #TargetOctave Boundries
    plt.axvline(x=i, color='black', linestyle='dotted')
plt.ylabel('Amplitude')
plt.xlabel('Frequency')
plt.yticks(y, " ")
#plt.savefig('Transposition1.png')

#Target octave til source octave
fig = plt.figure()
plt.title('Transposition')
plt.plot(x, y)
plt.plot(x3, y3, linestyle='dashed', color='orange')
for i in [1875,3750]: #SourceOctave Boundries
    plt.axvline(x=i, color='black', linestyle='dotted')
plt.ylabel('Amplitude')
plt.xlabel('Frequency')
plt.yticks(y, " ")
#plt.savefig('Transposition2.png')

#Final signal
fig = plt.figure()
plt.title('Transposition')
plt.plot(x2, y2, color='orange')
plt.ylabel('Amplitude')
plt.xlabel('Frequency')
plt.yticks(y, " ")
#plt.savefig('Transposition3.png')